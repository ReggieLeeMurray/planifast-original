// <auto-generated />
using System;
using BEProyectoFinal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BEProyectoFinal.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20230401162250_MyFirstMigration")]
    partial class MyFirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BEProyectoFinal.Models.Departamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.EmpleadosInactivos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaSalida")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoID")
                        .IsUnique();

                    b.ToTable("EmpleadosInactivos");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.Eventos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Comentario")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("EmpleadosID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadosID");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.Historial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Archivo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("DataFiles")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("PlanillaID")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPlanilla")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("PlanillaID");

                    b.ToTable("Historial");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.Info", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("DireccionPrincipal")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaFundacion")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("MontoServicioMedico_ISR")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PorcentajeContribucionTrabajadorEM_IHSS")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PorcentajeContribucionTrabajadorIVM_IHSS")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("PorcentajeContribucionTrabajador_RAP")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("SitioWeb")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Techo15_ISR")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Techo20_ISR")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TechoEM_IHSS")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TechoExento_ISR")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TechoIVM_IHSS")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("TechoIVM_RAP")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.ToTable("Info");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.TipoPlanillas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("TipoPlanillas");
                });

            modelBuilder.Entity("BETesisProyectoFinal.Models.Empleados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DepartamentoID")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaNac")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("N_Cedula")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Permanente")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("PlanillaID")
                        .HasColumnType("int");

                    b.Property<decimal>("SalarioBase")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoID");

                    b.HasIndex("PlanillaID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Role")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Token")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Username")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BEProyectoFinal.Models.EmpleadosInactivos", b =>
                {
                    b.HasOne("BETesisProyectoFinal.Models.Empleados", "Empleados")
                        .WithOne("EmpleadosInactivos")
                        .HasForeignKey("BEProyectoFinal.Models.EmpleadosInactivos", "EmpleadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BEProyectoFinal.Models.Eventos", b =>
                {
                    b.HasOne("BETesisProyectoFinal.Models.Empleados", "Empleados")
                        .WithMany()
                        .HasForeignKey("EmpleadosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BEProyectoFinal.Models.Historial", b =>
                {
                    b.HasOne("BEProyectoFinal.Models.TipoPlanillas", "TipoPlanillas")
                        .WithMany()
                        .HasForeignKey("PlanillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BETesisProyectoFinal.Models.Empleados", b =>
                {
                    b.HasOne("BEProyectoFinal.Models.Departamentos", "Departamentos")
                        .WithMany()
                        .HasForeignKey("DepartamentoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BEProyectoFinal.Models.TipoPlanillas", "TipoPlanillas")
                        .WithMany()
                        .HasForeignKey("PlanillaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
